(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-55f74dc4"],{"2b92":function(e,t,i){"use strict";var r,a=i("a4ee"),n=(i("c120"),i("e92d"),i("cea0"),i("59b2")),s=i("d386"),o=(i("e041"),i("8eed"),i("f402"),i("6a0e")),l=i("d4ca");let c=r=class extends o["a"]{constructor(e){super(e),this.value=0,this.unit="milliseconds"}toMilliseconds(){return this.value*l["b"][this.unit]}clone(){return new r({value:this.value,unit:this.unit})}};Object(a["a"])([Object(n["b"])({type:Number,json:{write:!0},nonNullable:!0})],c.prototype,"value",void 0),Object(a["a"])([Object(n["b"])({type:l["d"].apiValues,json:{type:l["d"].jsonValues,read:l["d"].read,write:l["d"].write},nonNullable:!0})],c.prototype,"unit",void 0),c=r=Object(a["a"])([Object(s["a"])("esri.TimeInterval")],c);var u=c;t["a"]=u},"3d59":function(e,t,i){"use strict";i.d(t,"a",(function(){return c}));var r=i("a4ee"),a=(i("c120"),i("b2b2")),n=i("e92d"),s=(i("cea0"),i("59b2")),o=i("d386"),l=(i("e041"),i("8eed"),i("f402"),i("54b4"));const c=e=>{let t=class extends e{get title(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){const e=Object(l["e"])(this.url);if(Object(a["h"])(e)&&e.title)return e.title}return this._get("title")||""}set title(e){this._set("title",e)}set url(e){this._set("url",Object(l["f"])(e,n["a"].getLogger(this.declaredClass)))}};return Object(r["a"])([Object(s["b"])({dependsOn:["url"]})],t.prototype,"title",null),Object(r["a"])([Object(s["b"])({type:String})],t.prototype,"url",null),t=Object(r["a"])([Object(o["a"])("esri.layers.mixins.ArcGISService")],t),t}},"601a":function(e,t,i){"use strict";i.d(t,"a",(function(){return d}));var r=i("a4ee"),a=(i("c120"),i("e92d"),i("cea0"),i("59b2")),n=i("afcf"),s=i("d386"),o=(i("e041"),i("8eed"),i("f402"),i("c1da")),l=i("d4ca"),c=i("658b"),u=i("2b92"),p=i("f806");const d=e=>{let t=class extends e{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const i=t.timeInfo.exportOptions;if(!i)return null;const r=i.timeOffset,a=l["d"].fromJSON(i.timeOffsetUnits);return r&&a?new u["a"]({value:r,unit:a}):null}set timeInfo(e){Object(o["k"])(e,this.fields),this._set("timeInfo",e)}};return Object(r["a"])([Object(a["b"])({type:c["a"],json:{write:!1}})],t.prototype,"timeExtent",void 0),Object(r["a"])([Object(a["b"])({type:u["a"]})],t.prototype,"timeOffset",void 0),Object(r["a"])([Object(n["a"])("service","timeOffset",["timeInfo.exportOptions"])],t.prototype,"readOffset",null),Object(r["a"])([Object(a["b"])({value:null,type:p["a"],json:{write:!0,origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"timeInfo",null),Object(r["a"])([Object(a["b"])({type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation"},origins:{"web-scene":{read:!1,write:!1}}}})],t.prototype,"useViewTime",void 0),t=Object(r["a"])([Object(s["a"])("esri.layers.mixins.TemporalLayer")],t),t}},"80b7":function(e,t,i){"use strict";function r(e){return"date"===e.type||"esriFieldTypeDate"===e.type}function a(e){return e.toLowerCase().trim()}t["a"]=class{constructor(e){if(this.fields=e,this._fieldsMap=new Map,this._dateFieldsSet=new Set,this.dateFields=[],!e)return;const t=[];for(const i of e){const e=i&&i.name;if(e){const n=a(e);this._fieldsMap.set(e,i),this._fieldsMap.set(n,i),t.push(n),r(i)&&(this.dateFields.push(i),this._dateFieldsSet.add(i))}}t.sort(),this.uid=t.join(",")}destroy(){this._fieldsMap.clear()}has(e){return null!=this.get(e)}get(e){return null!=e?this._fieldsMap.get(e)||this._fieldsMap.get(a(e)):void 0}isDateField(e){return this._dateFieldsSet.has(this.get(e))}normalizeFieldName(e){const t=this.get(e);if(t)return t.name}}},bb72:function(e,t,i){"use strict";i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return s})),i.d(t,"c",(function(){return n}));var r=i("e041");function a(e,t){let i={query:e};return t&&(i={...t,...i}),i}function n(e){return"string"==typeof e?Object(r["I"])(e):e}function s(e,t,i){const r={};for(const a in e){if("declaredClass"===a)continue;const n=e[a];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){r[a]=[];for(let e=0;e<n.length;e++)r[a][e]=s(n[e])}else if("object"==typeof n)if(n.toJSON){const e=n.toJSON(i&&i[a]);r[a]=t?e:JSON.stringify(e)}else r[a]=t?n:JSON.stringify(n);else r[a]=n}return r}},f806:function(e,t,i){"use strict";var r,a=i("a4ee"),n=(i("c120"),i("7ffa")),s=(i("e92d"),i("cea0"),i("59b2")),o=i("afcf"),l=i("d386"),c=i("09db"),u=(i("e041"),i("8eed"),i("f402"),i("6a0e")),p=i("d4ca"),d=i("658b"),b=i("2b92");let m=r=class extends u["a"]{constructor(e){super(e),this.respectsDaylightSaving=!1,this.timezone=null}readRespectsDaylightSaving(e,t){return void 0!==t.respectsDaylightSaving?t.respectsDaylightSaving:void 0!==t.respectDaylightSaving&&t.respectDaylightSaving}clone(){const{respectsDaylightSaving:e,timezone:t}=this;return new r({respectsDaylightSaving:e,timezone:t})}};Object(a["a"])([Object(s["b"])({type:Boolean,json:{write:!0}})],m.prototype,"respectsDaylightSaving",void 0),Object(a["a"])([Object(o["a"])("respectsDaylightSaving",["respectsDaylightSaving","respectDaylightSaving"])],m.prototype,"readRespectsDaylightSaving",null),Object(a["a"])([Object(s["b"])({type:String,json:{read:{source:"timeZone"},write:{target:"timeZone"}}})],m.prototype,"timezone",void 0),m=r=Object(a["a"])([Object(l["a"])("esri.layers.support.TimeReference")],m);var h,f=m,y=f;let O=h=class extends u["a"]{constructor(e){super(e),this.cumulative=!1,this.endField=null,this.fullTimeExtent=null,this.hasLiveData=!1,this.interval=null,this.startField=null,this.timeReference=null,this.trackIdField=null,this.useTime=!0}readFullTimeExtent(e,t){if(!t.timeExtent||!Array.isArray(t.timeExtent)||2!==t.timeExtent.length)return null;const i=new Date(t.timeExtent[0]),r=new Date(t.timeExtent[1]);return new d["a"]({start:i,end:r})}writeFullTimeExtent(e,t){e&&e.start&&e.end?t.timeExtent=[e.start.getTime(),e.end.getTime()]:t.timeExtent=null}readInterval(e,t){return t.timeInterval&&t.timeIntervalUnits?new b["a"]({value:t.timeInterval,unit:p["d"].fromJSON(t.timeIntervalUnits)}):t.defaultTimeInterval&&t.defaultTimeIntervalUnits?new b["a"]({value:t.defaultTimeInterval,unit:p["d"].fromJSON(t.defaultTimeIntervalUnits)}):null}writeInterval(e,t){if(e){const i=e.toJSON();t.timeInterval=i.value,t.timeIntervalUnits=i.unit}else t.timeInterval=null,t.timeIntervalUnits=null}clone(){const{cumulative:e,endField:t,hasLiveData:i,interval:r,startField:a,timeReference:s,fullTimeExtent:o,trackIdField:l,useTime:c}=this;return new h({cumulative:e,endField:t,hasLiveData:i,interval:r,startField:a,timeReference:Object(n["a"])(s),fullTimeExtent:Object(n["a"])(o),trackIdField:l,useTime:c})}};Object(a["a"])([Object(s["b"])({type:Boolean,json:{read:{source:"exportOptions.timeDataCumulative"},write:{target:"exportOptions.timeDataCumulative"}}})],O.prototype,"cumulative",void 0),Object(a["a"])([Object(s["b"])({type:String,json:{read:{source:"endTimeField"},write:{target:"endTimeField",allowNull:!0}}})],O.prototype,"endField",void 0),Object(a["a"])([Object(s["b"])({type:d["a"],json:{write:{enabled:!0,allowNull:!0}}})],O.prototype,"fullTimeExtent",void 0),Object(a["a"])([Object(o["a"])("fullTimeExtent",["timeExtent"])],O.prototype,"readFullTimeExtent",null),Object(a["a"])([Object(c["a"])("fullTimeExtent")],O.prototype,"writeFullTimeExtent",null),Object(a["a"])([Object(s["b"])({type:Boolean,json:{write:!0}})],O.prototype,"hasLiveData",void 0),Object(a["a"])([Object(s["b"])({type:b["a"],json:{write:{enabled:!0,allowNull:!0}}})],O.prototype,"interval",void 0),Object(a["a"])([Object(o["a"])("interval",["timeInterval","timeIntervalUnits","defaultTimeInterval","defaultTimeIntervalUnits"])],O.prototype,"readInterval",null),Object(a["a"])([Object(c["a"])("interval")],O.prototype,"writeInterval",null),Object(a["a"])([Object(s["b"])({type:String,json:{read:{source:"startTimeField"},write:{target:"startTimeField",allowNull:!0}}})],O.prototype,"startField",void 0),Object(a["a"])([Object(s["b"])({type:y,json:{write:{enabled:!0,allowNull:!0}}})],O.prototype,"timeReference",void 0),Object(a["a"])([Object(s["b"])({type:String,json:{write:{enabled:!0,allowNull:!0}}})],O.prototype,"trackIdField",void 0),Object(a["a"])([Object(s["b"])({type:Boolean,json:{read:{source:"exportOptions.useTime"},write:{target:"exportOptions.useTime"}}})],O.prototype,"useTime",void 0),O=h=Object(a["a"])([Object(l["a"])("esri.layers.support.TimeInfo")],O);var g=O;t["a"]=g},fc65:function(e,t,i){"use strict";i.r(t);var r,a=i("a4ee"),n=(i("c120"),i("b2b2")),s=i("e92d"),o=i("cea0"),l=i("59b2"),c=i("d386"),u=i("09db"),p=i("e041"),d=(i("8eed"),i("f402"),i("f4cc")),b=i("4856"),m=i("a6a3"),h=i("e694"),f=i("22f4"),y=i("b911"),O=i("3d59"),g=i("997b"),j=i("0db5"),v=i("8e17"),w=i("5a62"),R=i("601a"),x=i("f51b"),S=i("7ffa"),I=i("4adc"),N=i("fa8a"),T=i("afcf"),_=i("ce50"),F=i("5996"),D=i("4ae5"),C=i("3af1"),M=i("1219"),P=(i("e06a"),i("2eab")),A=i("8d60"),V=i("3e27"),J=i("ba40"),E=i("a1f3"),L=i("80b7"),z=i("f29a"),k=i("c64f"),U=i("feec"),q=i("b627"),Q=i("448d"),B=i("6a0e");const H=new Set(["Raster","Raster2","DEM","FillRaster"]),G=new Set(["Rasters"]),W=e=>e&&e.rasterFunction?K.fromJSON(e):e,X=e=>e&&e instanceof K?e.toJSON():e;var Y;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(Y||(Y={}));let K=r=class extends B["a"]{constructor(e){super(e),this.functionArguments=null,this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}readFunctionArguments(e,t){return(e=>{if(null==e)return null;const t={};for(const i of Object.keys(e))H.has(i)?t[i]=W(e[i]):G.has(i)&&Array.isArray(e[i])?t[i]=e[i].map(W):t[i]=e[i];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,i){const r={};for(const a of Object.keys(e))H.has(a)?r[a]=X(e[a]):G.has(a)&&Array.isArray(e[a])?r[a]=e[a].map(X):r[a]=X(e[a]);this.functionDefinition?t.arguments=r:t[i]=r}readFunctionName(e,t){const i=t.rasterFunctionInfos,r=t.name;return r||(i&&i.length&&"None"!==i[0].name?i[0].name:t.rasterFunction)}writeFunctionName(e,t,i){this.functionDefinition?t.name=e:t[i]=e}readFunctionType(e){return Y[e]}writeFunctionType(e,t,i){t[i]=Y[e]}clone(){return new r({functionName:this.functionName,functionArguments:Object(S["a"])(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};Object(a["a"])([Object(l["b"])({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],K.prototype,"functionArguments",void 0),Object(a["a"])([Object(T["a"])("functionArguments",["rasterFunctionArguments","arguments"])],K.prototype,"readFunctionArguments",null),Object(a["a"])([Object(u["a"])("functionArguments")],K.prototype,"writeFunctionArguments",null),Object(a["a"])([Object(l["b"])({json:{type:String,write:{target:"rasterFunction"}}})],K.prototype,"functionName",void 0),Object(a["a"])([Object(T["a"])("functionName",["rasterFunction","rasterFunctionInfos","name"])],K.prototype,"readFunctionName",null),Object(a["a"])([Object(u["a"])("functionName")],K.prototype,"writeFunctionName",null),Object(a["a"])([Object(Q["a"])({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(l["b"])({json:{default:"unknown"}})],K.prototype,"outputPixelType",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0}})],K.prototype,"variableName",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],K.prototype,"description",void 0),Object(a["a"])([Object(l["b"])({json:{origins:{"web-document":{read:!1,write:!1}}}})],K.prototype,"functionType",void 0),Object(a["a"])([Object(T["a"])("functionType")],K.prototype,"readFunctionType",null),Object(a["a"])([Object(u["a"])("functionType")],K.prototype,"writeFunctionType",null),Object(a["a"])([Object(l["b"])({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],K.prototype,"functionDefinition",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],K.prototype,"thumbnail",void 0),K=r=Object(a["a"])([Object(c["a"])("esri.layers.support.RasterFunction")],K);var Z=K,$=Z,ee=i("c3fc"),te=i("7c6e"),ie=i("6557");const re={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},ae={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ne=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function se(e){return ne.has(e.type)}function oe(e,t){if(!e||!t)return Object(S["a"])(e||t);const i=Object(S["a"])(e);return"none"!==t.functionName.toLowerCase()&&(ce(i.functionArguments).Raster=t),i}function le(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=new $;i.functionName="Stretch";const r=ue[ie["b"].toJSON(e.stretchType)],a="u8",n=function(e){const t=[];return e.forEach(e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}}),t}(e.statistics),s={StretchType:r,Statistics:n,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(s.Min=e.outputMin),null!=e.outputMax&&(s.Max=e.outputMax),r===ue.standardDeviation?(s.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=a):r===ue.percentClip?(s.MinPercent=e.minPercent,s.MaxPercent=e.maxPercent,i.outputPixelType=a):r===ue.minMax?i.outputPixelType=a:r===ue.sigmoid&&(s.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=s,i.variableName="Raster",e.colorRamp){const r=e.colorRamp,a=new $,n=Object(te["c"])(r);return n?a.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||"algorithmic"!==r.type&&"multipart"!==r.type?a.functionArguments={colorRamp:e.colorRamp.toJSON()}:a.functionArguments={Colormap:Object(te["b"])(r,256)},a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=i,a}return i}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],a=[],n=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=de(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,i)=>{const r=t.symbol.color;let a;r.a&&c.forEach(s=>{a=s.attributes[e.field],(a>=t.minValue&&a<t.maxValue||i===e.classBreakInfos.length-1&&a>=t.minValue)&&n.push([s.attributes[u],r.r,r.g,r.b])})});const t=o?pe(n,o):n,i=new $;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=t,i.variableName="Raster",i}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?i.push(e.minValue,e.maxValue+s):i.push(e.minValue+s,e.maxValue+s),r.push(t),n.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)});const p=o?pe(n,o):n,d=new $;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:a},d.variableName="Raster";const b=new $;return b.functionName="Colormap",b.functionArguments={Colormap:p,Raster:d},b}(e,t);case"unique-value":return function(e,t){const i=[],{pixelType:r,rasterAttributeTable:a}=t,n=a&&a.features,s=de(a);let o=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach(t=>{const r=t.symbol.color;r.a&&(e.field!==s&&n?n&&n.forEach(a=>{String(a.attributes[e.field])===String(t.value)&&i.push([a.attributes[s],r.r,r.g,r.b])}):isNaN(+t.value)?o=!0:i.push([+t.value,r.r,r.g,r.b]))}),o)return null;const l=r&&i.length>0?pe(i,r):i,c=new $;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=l,c.variableName="Raster",c}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return;const{pixelType:r}=t,a=r?pe(i,r):i,n=new $;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=a,n}(e,t);case"vector-field":return function(e,t){const i=new $;i.functionName="VectorFieldRenderer";const{dataType:r,bandProperties:a}=t,n="vector-uv"===r;let s,o;a&&2===a.length&&(s=a.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=a.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter(e=>"Magnitude"===e.field)[0]:new ee["a"],p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ae[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return i.functionArguments=p,i}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new $;const i=new $;i.functionName="Hillshade";const r="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,n={HillshadeType:r,SlopeType:a,ZFactor:e.zFactor};return 0===r&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===a&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),i.functionArguments=n,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",n.Colormap=Object(te["b"])(e.colorRamp,256)),i}(e,t)}}function ce(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?ce(t.functionArguments):e}const ue={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function pe(e,t){const i=re[String(t).toLowerCase()];return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function de(e){if(!e)return;const{fields:t}=e,i=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return i&&i.name}var be,me=i("1a3e");const he=Object(N["b"])()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),fe=Object(N["b"])()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let ye=be=class extends B["a"]{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return fe.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const i=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=i||(r?he.toJSON(r):null);return he.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new be({ascending:this.ascending,itemRenderingRule:Object(S["a"])(this.itemRenderingRule),lockRasterIds:Object(S["a"])(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(S["a"])(this.multidimensionalDefinition),objectIds:Object(S["a"])(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(S["a"])(this.viewpoint),where:this.where})}};Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],ye.prototype,"ascending",void 0),Object(a["a"])([Object(T["a"])("ascending",["ascending","sortAscending"])],ye.prototype,"readAscending",null),Object(a["a"])([Object(l["b"])({type:$,json:{write:!0}})],ye.prototype,"itemRenderingRule",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],ye.prototype,"lockRasterIds",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{type:fe.jsonValues,write:{target:"mosaicMethod",writer:fe.write}}})],ye.prototype,"method",void 0),Object(a["a"])([Object(T["a"])("method",["mosaicMethod","defaultMosaicMethod"])],ye.prototype,"readMethod",null),Object(a["a"])([Object(l["b"])({type:[q["a"]],json:{write:!0}})],ye.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{name:"fids",write:!0}})],ye.prototype,"objectIds",void 0),Object(a["a"])([Object(l["b"])({json:{type:he.jsonValues,read:{reader:he.read},write:{target:"mosaicOperation",writer:he.write}}})],ye.prototype,"operation",void 0),Object(a["a"])([Object(T["a"])("operation",["mosaicOperation","mosaicOperator"])],ye.prototype,"readOperation",null),Object(a["a"])([Object(l["b"])({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],ye.prototype,"sortField",void 0),Object(a["a"])([Object(l["b"])({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],ye.prototype,"sortValue",void 0),Object(a["a"])([Object(me["a"])("sortValue")],ye.prototype,"castSortValue",null),Object(a["a"])([Object(l["b"])({type:D["a"],json:{write:!0}})],ye.prototype,"viewpoint",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{write:!0}})],ye.prototype,"where",void 0),ye=be=Object(a["a"])([Object(c["a"])("esri.layers.support.MosaicRule")],ye);var Oe=ye,ge=Oe;const je=new N["a"]({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),ve=new N["a"]({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let we=class extends B["a"]{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new ge({where:i})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const i=e.pixelFilter,r=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),r&&!i&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:i,renderingRule:r,renderer:a}=t;return a&&se(a)?oe(le(a,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:null==(e=i.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),r):r}_addResampleRasterFunction(e){var t;let i=null;if("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)){const e={},t=this.layer.renderingRule;if(!t||"Resample"!==t.functionName){const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}i=$.fromJSON(e)}return oe(i,e)}};Object(a["a"])([Object(l["b"])()],we.prototype,"layer",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],we.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(u["a"])("adjustAspectRatio")],we.prototype,"writeAdjustAspectRatio",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(I["a"])("layer.bandIds")],we.prototype,"bandIds",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],we.prototype,"compression",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(I["a"])("layer.compressionQuality")],we.prototype,"compressionQuality",void 0),Object(a["a"])([Object(u["a"])("compressionQuality")],we.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(I["a"])("layer.compressionTolerance")],we.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(u["a"])("compressionTolerance")],we.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(I["a"])("layer.format")],we.prototype,"format",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{reader:je.read},write:{writer:je.write}}}),Object(I["a"])("layer.interpolation")],we.prototype,"interpolation",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(I["a"])("layer.noData")],we.prototype,"noData",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{reader:ve.read},write:{writer:ve.write}}}),Object(I["a"])("layer.noDataInterpretation")],we.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],we.prototype,"pixelType",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],we.prototype,"lercVersion",void 0),Object(a["a"])([Object(u["a"])("lercVersion")],we.prototype,"writeLercVersion",null),Object(a["a"])([Object(l["b"])({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],we.prototype,"version",null),Object(a["a"])([Object(l["b"])({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],we.prototype,"mosaicRule",null),Object(a["a"])([Object(l["b"])({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],we.prototype,"renderingRule",null),we=Object(a["a"])([Object(c["a"])("esri.layers.mixins.ExportImageServiceParameters")],we);var Re=i("a4f3"),xe=i("da6b"),Se=i("1451"),Ie=i("1ccd"),Ne=i("7220"),Te=i("a8d5"),_e=i("bb72");let Fe=class extends B["a"]{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"catalogItemVisibilities",void 0),Object(a["a"])([Object(l["b"])({type:z["default"],json:{write:!0}})],Fe.prototype,"catalogItems",void 0),Object(a["a"])([Object(l["b"])({type:D["a"],json:{write:!0}})],Fe.prototype,"location",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"name",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"objectId",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"processedValues",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"properties",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Fe.prototype,"value",void 0),Fe=Object(a["a"])([Object(c["a"])("esri.tasks.support.ImageIdentifyResult")],Fe);var De=Fe,Ce=De;async function Me(e,t,i){const r=Object(_e["c"])(e),a=t.geometry?[t.geometry]:[],s=await Object(Te["a"])(a),o=t.toJSON();!function(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null!=t.end&&-1===i.indexOf(t.end)&&i.push(t.end),e.time=i.join(",")}}(o);const l=s&&s[0];Object(n["h"])(l)&&(o.geometry=l.toJSON());const c=Object(_e["b"])({...r.query,f:"json",...o});return Object(_e["a"])(c,i)}async function Pe(e,t,i){const r=await Me(e,t,i),a=Object(_e["c"])(e),{data:n}=await Object(P["default"])(a.path+"/computeStatisticsHistograms",r),{statistics:s}=n;return null!=s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:n.histograms}}async function Ae(e,t,i){const r=await Me(e,t,i),a=Object(_e["c"])(e),{data:n}=await Object(P["default"])(a.path+"/computeHistograms",r);return{histograms:n.histograms}}async function Ve(e,t,i){const r=Object(_e["c"])(e),a=t.geometry?[t.geometry]:[];return Object(Te["a"])(a).then(e=>{const a=t.toJSON(),s=e&&e[0];Object(n["h"])(s)&&(a.geometry=JSON.stringify(s.toJSON()));const o=Object(_e["b"])({...r.query,f:"json",...a}),l=Object(_e["a"])(o,i);return Object(P["default"])(r.path+"/identify",l)}).then(e=>Ce.fromJSON(e.data))}var Je=i("9209");let Ee=class extends Je["a"]{execute(e,t){return Ve(this.url,e,t)}};Ee=Object(a["a"])([Object(c["a"])("esri.tasks.ImageIdentifyTask")],Ee);var Le,ze=Ee,ke=ze,Ue=i("a9ab"),qe=i("658b");let Qe=Le=class extends B["a"]{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(Ue["c"])(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ge.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=$.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=e.start?e.start.getTime():null,a=e.end?e.end.getTime():null;t[i]=null!=r?null!=a?`${r},${a}`:""+r:null}}clone(){return new Le(Object(S["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(l["b"])({json:{write:!0}})],Qe.prototype,"geometry",void 0),Object(a["a"])([Object(u["a"])("geometry")],Qe.prototype,"writeGeometry",null),Object(a["a"])([Object(l["b"])({type:ge,json:{write:!0}})],Qe.prototype,"mosaicRule",null),Object(a["a"])([Object(u["a"])("mosaicRule")],Qe.prototype,"writeMosaicRule",null),Object(a["a"])([Object(l["b"])({type:$,json:{write:!0}})],Qe.prototype,"renderingRule",null),Object(a["a"])([Object(u["a"])("renderingRule")],Qe.prototype,"writeRenderingRule",null),Object(a["a"])([Object(l["b"])({type:[$],json:{write:!0}})],Qe.prototype,"renderingRules",void 0),Object(a["a"])([Object(u["a"])("renderingRules")],Qe.prototype,"writeRenderingRules",null),Object(a["a"])([Object(l["b"])({type:D["a"],json:{write:!0}})],Qe.prototype,"pixelSize",void 0),Object(a["a"])([Object(u["a"])("pixelSize")],Qe.prototype,"writePixelSize",null),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],Qe.prototype,"returnGeometry",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],Qe.prototype,"returnCatalogItems",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],Qe.prototype,"returnPixelValues",void 0),Object(a["a"])([Object(l["b"])({type:Number,json:{write:!0}})],Qe.prototype,"maxItemCount",void 0),Object(a["a"])([Object(l["b"])({type:qe["a"],json:{write:{target:"time"}}})],Qe.prototype,"timeExtent",void 0),Object(a["a"])([Object(u["a"])("timeExtent")],Qe.prototype,"writeTimeExtent",null),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Qe.prototype,"raster",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Qe.prototype,"viewId",void 0),Qe=Le=Object(a["a"])([Object(c["a"])("esri.tasks.support.ImageIdentifyParameters")],Qe);var Be=Qe,He=Be;const Ge=s["a"].getLogger("esri.layers.mixins.ArcGISImageService"),We=Object(N["b"])()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),Xe=Object(N["b"])()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),Ye=Object(N["b"])()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ke=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ze=Object(l["a"])(o["i"],{min:0,max:255}),$e=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new we({layer:this}))}readDefaultServiceMosaicRule(e,t){return ge.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}get queryTask(){return new U["a"]({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get fieldsIndex(){return this.fields?new L["a"](this.fields):null}set format(e){e&&Ke.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ge.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return ge.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,i){let r=this.mosaicRule;const a=this.definitionExpression;r?a&&a!==r.where&&(r=r.clone(),r.where=a):a&&(r=new ge({where:a})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Ze(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return this.url?Object(p["I"])(this.url):null}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(J["b"])(r,i)||void 0;if(null!=a)return se(a)||Ge.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new E["a"]({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new E["a"]({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new E["a"]({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(S["a"])(this.fields):[];a.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(r),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new E["a"]({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new E["a"]({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new E["a"]({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const i=Object(S["a"])(t);return i.name=e+t.name,i});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=$.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?$.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){this._isRFTJson(e)||(t[i]=e.toJSON())}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?F["a"].fromJSON(i):null}readPixelType(e){return Ye.fromJSON(e)||e}writePixelType(e,t,i){(Object(n["g"])(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=Ye.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const r=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){r&&(this._symbolizer.bind(),await a.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);i={extent:e.extent,pixelBlock:s}}else i={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){const i=null==t?void 0:t.signal;if(await this._fetchCapabilities(i),!this.capabilities.operations.supportsComputeHistograms)throw new _["a"]("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:r,mosaicRule:a,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),a&&null==e.mosaicRule&&(e.mosaicRule=a),r&&null==e.raster&&(e.raster=r),Ae(this.url,e,{signal:i})}async computeStatisticsHistograms(e,t){const i=null==t?void 0:t.signal;if(await this._fetchCapabilities(i),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new _["a"]("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:r,mosaicRule:a,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),a&&null==e.mosaicRule&&(e.mosaicRule=a),r&&null==e.raster&&(e.raster=r),Pe(this.url,e,{signal:i})}fetchImage(e,t,i,r={}){if(null==e||null==t||null==i)return Object(d["t"])(new _["a"]("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:r.signal}):null;return Object(d["y"])(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,i,r.timeExtent),imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:r.requestAsImageElement&&!this.pixelFilter||!1,signal:r.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(P["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Object(d["t"])(new _["a"]("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(P["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>z["default"].fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const i=Object(P["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),r=Object(P["default"])(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),a=await Object(d["b"])([i,r]);if(!a[0])return;const n=C["a"].fromJSON(a[0].extent),s=a[0].statistics?a[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new Re["a"]({bandCount:a[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new D["a"]({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:n.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:s,histograms:a[0].histograms,keyProperties:a[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:i}=await Object(P["default"])(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),r=i&&i.ics;if(!r)return;let a=null;try{a=(await Object(P["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(P["default"])(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(P["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=(a.xmin+a.xmax)/2,u=(a.ymax-a.ymin)/6,p=a.ymin+u,b=[];for(let d=0;d<5;d++)b.push({x:c,y:p+u*d});const m={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:b}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},h=Object(P["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then(e=>e.data).catch(()=>({})),f=await Object(d["b"])([n,l,h]);let y=f[0].ipxf;if(null==y){var O,g,j;const e=null==(O=r.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(g=e.name)?void 0:g.toLowerCase())&&6===(null==e||null==(j=e.coefficients)?void 0:j.length)&&(y={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=C["a"].fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);v&&(v.spatialReference=new F["a"]({wkid:0,imageCoordinateSystem:r}));const w=f[2].geometries?f[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],R=w.length;if(R<3)return{ics:r,icsToPixelTransform:y,icsExtent:v,northDirection:null};let x=0,S=0,I=0,N=0;for(let d=0;d<R;d++)x+=w[d].x,S+=w[d].y,I+=w[d].x*w[d].x,N+=w[d].x*w[d].y;const T=(R*N-x*S)/(R*I-x*x);let _=0;const D=w[4].x>w[0].x,M=w[4].y>w[0].y;return T===1/0?_=M?90:270:0===T?_=D?0:180:T>0?_=D?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(_=M?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:r,icsToPixelTransform:y,icsExtent:v,northDirection:_}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase())&&Object(n["h"])(this.serviceRasterInfo))return this.serviceRasterInfo;const i=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),i=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}(e);if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const r=this._generateRasterInfo(e,t);this._functionRasterInfos[i]=r;try{return await r}catch{return this._functionRasterInfos[i]=null,null}}getExportImageServiceParameters(e,t,i,r){const a=(e=e.clone().shiftCentralMeridian()).spatialReference;let s;if(a.imageCoordinateSystem){const{id:e,referenceServiceName:t}=a.imageCoordinateSystem;s=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:a.imageCoordinateSystem})}else s=a.wkid||JSON.stringify(a.toJSON());Object(n["h"])(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c,mosaicRule:u,renderingRule:p}=o;l instanceof Array&&l.length>0&&(o.bandIds=l.join(",")),c instanceof Array&&c.length>0&&(o.noData=c.join(","));const d=this.timeInfo;u&&u.multidimensionalDefinition&&r&&d&&d.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter(e=>e.dimensionName!==d.startField)),o.mosaicRule=u&&JSON.stringify(u),o.renderingRule=p&&JSON.stringify(p);const b={};if(r){const{start:e,end:t}=r.toJSON();e&&t&&e===t?b.time=""+e:null==e&&null==t||(b.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+i,...o,...b}}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new _["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:r,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),new ke({url:this.url}).execute(e,t)}async queryRasters(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new _["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");return this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Object(d["t"])(new _["a"]("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:a,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(n["h"])(e.outFields)&&(o=e.outFields.some(e=>-1===e.toLowerCase().indexOf(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(u)>-1&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new $({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const b=Object(n["g"])(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:i,returnCatalogItems:o,returnGeometry:b,maxItemCount:a?1:null});delete m.f;const h=new He(m),f=new ke({url:this.url}),y=this.generateRasterInfo(this.renderingRule);return Object(d["c"])(t=>{y.then(()=>{f.execute(h).then(i=>{const a=e.outFields;if(o&&!b&&i.catalogItems&&i.catalogItems.features&&i.catalogItems.features.length>0){const n=this.objectIdField||"ObjectId",o=i.catalogItems.features,l=o.map(e=>e.attributes&&e.attributes[n]),u=new k["a"]({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[n]});return this.queryRasters(u).then(l=>{l&&l.features&&l.features.length>0&&l.features.forEach(t=>{o.forEach(i=>{i.attributes[n]===t.attributes[n]&&(i.geometry=new M["a"](t.geometry),i.geometry.spatialReference=e.outSpatialReference)})}),t(this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new _["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}t(this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new _["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const i=Object(P["default"])(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),r=Object(P["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Object(d["b"])([i,r]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),Object(n["h"])(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=Object(n["h"])(this.serviceRasterInfo)?Object(d["u"])(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),r=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Object(d["b"])([i,r]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&Object(Ie["d"])(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,Ge.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(n["h"])(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new xe["a"];this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let i=this.sourceJSON;if(!i){const{data:t,ssl:r}=await Object(P["default"])(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});i=t,this.sourceJSON=i,r&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=i.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new _["a"]("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(i,{origin:"service",url:this.parsedUrl})}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(Ie["b"])(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(Ie["a"])(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new Ne["a"]({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(Se["a"])(e,t,i)}async _fetchMultidimensionalInfo(e){var t;const i=await Object(P["default"])(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Object(d["t"])(new _["a"]("imagery-layer:fetch-metadata","valid serviceInfo is required"));const i=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,r=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(P["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?i:null}),signal:r}).then(e=>z["default"].fromJSON(e.data)).catch(()=>null),n=!!(t.hasColormap&&this.version>=10.1)&&Object(P["default"])(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?i:null}),signal:r}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(P["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?i:null}),signal:r}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(P["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:i}),signal:r}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Object(d["b"])([a,n,s,o,l]).then(e=>{let i=null;if(t.minValues&&t.minValues.length===t.bandCount){i=[];for(let e=0;e<t.minValues.length;e++)i.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const r=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=F["a"].fromJSON(t.spatialReference||t.extent.spatialReference);return new Re["a"]({width:r,height:a,bandCount:t.bandCount,extent:C["a"].fromJSON(t.extent),spatialReference:n,pixelSize:new D["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:i,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,signal:r}=e;if(i&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(P["default"])(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:r}).then(e=>({imageElement:e.data,params:t}));const a=this._initJobHandler(),n=Object(P["default"])(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:r});return Object(d["b"])([n,a]).then(e=>{const i=e[0].data,a=t.format||"jpgpng";let n=a;if("bsq"!==n&&"bip"!==n&&(n=Object(Se["b"])(i)),!n)throw new _["a"]("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(i)));const s="gif"===a||"bmp"===a||a.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:r};return s?Object(Se["a"])(i,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(i,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:a},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:i}=await Object(P["default"])(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:i,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,i=[];for(const r in t)if(t.hasOwnProperty(r)){const e=t[r],a=e.extent;let n=!0,s=[a[0]];e.hasRanges&&!0===e.hasRanges?(n=!1,s=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(a[1])<=Math.abs(a[0])&&(s=[a[1]]),i.push(new q["a"]({variableName:"",dimensionName:t[r].name,isSlice:n,values:s}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new ge;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if("string"==typeof e){const i=this.popupTemplate&&this.popupTemplate.fieldInfos,r=this._getFieldInfo(i,t),a=r&&r.format;if(a){let t,i;return e.trim().indexOf(",")>-1?(t=",",i=t+" ",this._formatDelimitedString(e,t,i,a)):e.trim().indexOf(" ")>-1?(t=i=" ",this._formatDelimitedString(e,t,i,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const i=t.toLowerCase();let r;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==i&&e.fieldName.toLowerCase()!==i.replace(/ /g,"_"))&&(r=e,!0)),r}_formatDelimitedString(e,t,i,r){return e&&t&&i&&r?e.trim().split(t).map(e=>this._formatNumberFromString(e,r)).join(i):e}_formatNumberFromString(e,t){if(!e||!t)return e;const i=Number(e);return isNaN(i)?e:t.format(i)}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:a,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof i&&i.toLowerCase().indexOf("nodata")>-1,b=[];if(i&&!c&&!d){const e={};e[p]=0,u=[i],c=[new A["a"](this.fullExtent,null,e)]}if(!c)return[];let m,h,f;this._updateResponseFieldNames(c,o);for(let y=0;y<c.length;y++){if(m=c[y],null!=i&&!d){if(h=u[y],f=this.renderingRule&&l&&l.length>0&&r&&r.length>0&&r.indexOf(this.renderingRule.functionName)>-1?l[r.indexOf(this.renderingRule.functionName)]:i,"nodata"===h.toLowerCase()&&!a)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";m.attributes[e]=this._formatAttributeValue(h,e),m.attributes[t]=this._formatAttributeValue(f,t),this._updateFeatureWithMagDirValues(m,h);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(n["h"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?h:i:f;this.renderingRule||(o=s?h:i),this._updateFeatureWithRasterAttributeTableValues(m,o)}if(m.sourceLayer=this,s&&this._updateFeatureWithDomainValues(m),r&&l&&r.length===l.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];m.attributes[t]=this._formatAttributeValue(l[e],t)}b.push(c[y])}return b}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo&&this.rasterInfo.attributeTable||Object(n["h"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,r=i&&i.features;if(!r)return;const a=i.fields,s=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=s&&s[0];if(!o)return;const l=r.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const i=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=this._formatAttributeValue(l[0].attributes[t.name],i)})}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const i=t.replace(" ",",").split(",").map(e=>parseFloat(e)),r=i.map(e=>[e]),a=i.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new V["a"]({height:1,width:1,pixelType:"f32",pixels:r,statistics:a});this.pixelFilter({pixelBlock:n,extent:new C["a"](0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.filter(e=>e.code===i)[0];r&&(e.attributes[t.name]=r.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;i&&e.forEach(e=>{if(e&&e.attributes)for(const r of t)if(i.has(r)){const t=i.get(r).name;t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:a}=e,n=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:i>=10.7&&s,supportsComputePixelLocation:i>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!r||!r.supportsStatistics),supportsOrderBy:!(!r||!r.supportsOrderBy),supportsDistinct:!(!r||!r.supportsDistinct),supportsPagination:!(!r||!r.supportsPagination),supportsStandardizedQueriesOnly:!(!r||!r.useStandardizedQueries),maxRecordCount:a}}}};return Object(a["a"])([Object(l["b"])()],t.prototype,"_functionRasterInfos",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_symbolizer",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a["a"])([Object(T["a"])("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a["a"])([Object(l["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),Object(a["a"])([Object(l["b"])()],t.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(I["a"])("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a["a"])([Object(T["a"])("bandIds")],t.prototype,"readBandIds",null),Object(a["a"])([Object(l["b"])({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a["a"])([Object(T["a"])("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a["a"])([Object(l["b"])({type:Number})],t.prototype,"compressionQuality",void 0),Object(a["a"])([Object(u["a"])("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(l["b"])({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(u["a"])("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(l["b"])({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"rasterInfo",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,type:[E["a"]]})],t.prototype,"fields",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),Object(a["a"])([Object(l["b"])({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a["a"])([Object(T["a"])("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a["a"])([Object(l["b"])({type:C["a"]})],t.prototype,"fullExtent",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a["a"])([Object(l["b"])({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a["a"])([Object(l["b"])({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{type:We.jsonValues,read:We.read,write:We.write}})],t.prototype,"interpolation",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"minScale",void 0),Object(a["a"])([Object(T["a"])("service","minScale")],t.prototype,"readMinScale",null),Object(a["a"])([Object(l["b"])()],t.prototype,"maxScale",void 0),Object(a["a"])([Object(T["a"])("service","maxScale")],t.prototype,"readMaxScale",null),Object(a["a"])([Object(l["b"])({type:ge})],t.prototype,"mosaicRule",null),Object(a["a"])([Object(T["a"])("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a["a"])([Object(u["a"])("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(I["a"])("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a["a"])([Object(l["b"])({json:{type:o["a"]}})],t.prototype,"noData",void 0),Object(a["a"])([Object(u["a"])("noData")],t.prototype,"writeNoData",null),Object(a["a"])([Object(l["b"])({type:String,json:{type:Xe.jsonValues,read:Xe.read,write:Xe.write}})],t.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(l["b"])({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a["a"])([Object(T["a"])("objectIdField")],t.prototype,"readObjectIdField",null),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(I["a"])("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(I["a"])("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a["a"])([Object(l["b"])({type:Function})],t.prototype,"pixelFilter",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"raster",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"viewId",void 0),Object(a["a"])([Object(l["b"])({types:J["a"],json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:J["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),Object(a["a"])([Object(T["a"])("renderer")],t.prototype,"readRenderer",null),Object(a["a"])([Object(l["b"])(f["f"])],t.prototype,"opacity",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(I["a"])("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a["a"])([Object(l["b"])({type:$})],t.prototype,"renderingRule",null),Object(a["a"])([Object(T["a"])("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a["a"])([Object(u["a"])("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a["a"])([Object(l["b"])()],t.prototype,"serviceDataType",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,type:F["a"]})],t.prototype,"spatialReference",void 0),Object(a["a"])([Object(T["a"])("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a["a"])([Object(l["b"])({json:{type:Ye.jsonValues}})],t.prototype,"pixelType",void 0),Object(a["a"])([Object(T["a"])("pixelType")],t.prototype,"readPixelType",null),Object(a["a"])([Object(u["a"])("pixelType")],t.prototype,"writePixelType",null),Object(a["a"])([Object(l["b"])({constructOnly:!0,type:Re["a"]})],t.prototype,"serviceRasterInfo",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"sourceJSON",void 0),Object(a["a"])([Object(l["b"])(f["j"])],t.prototype,"url",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"version",void 0),Object(a["a"])([Object(T["a"])("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a["a"])([Object(c["a"])("esri.layers.mixins.ArcGISImageService")],t),t};let et=class extends(Object(g["a"])(Object(R["a"])(Object(v["a"])(Object(w["a"])(Object(y["a"])(Object(j["a"])($e(Object(O["a"])(Object(h["a"])(m["a"])))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n["h"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Object(d["u"])(this)}writeOperationalLayerType(e,t,i){var r;const a="vector-field"===(null==(r=this.renderer)?void 0:r.type);t[i]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,i=this.title,r=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=a&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;a&&(s.add("raster.itempixelvalue"),n&&s.add("raster.magnitude").add("raster.direction"));for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||r.add(o.name)}return Object(x["a"])({fields:t,title:i},{...e,visibleFieldNames:r})}redraw(){this.emit("redraw")}};Object(a["a"])([Object(l["b"])(f["d"])],et.prototype,"legendEnabled",void 0),Object(a["a"])([Object(l["b"])({type:["show","hide"]})],et.prototype,"listMode",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],et.prototype,"isReference",void 0),Object(a["a"])([Object(l["b"])({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],et.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(u["a"])("web-map","operationalLayerType")],et.prototype,"writeOperationalLayerType",null),Object(a["a"])([Object(l["b"])(f["g"])],et.prototype,"popupEnabled",void 0),Object(a["a"])([Object(l["b"])({type:b["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],et.prototype,"popupTemplate",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,dependsOn:["fields","title"]})],et.prototype,"defaultPopupTemplate",null),Object(a["a"])([Object(l["b"])({readOnly:!0,json:{read:!1}})],et.prototype,"type",void 0),et=Object(a["a"])([Object(c["a"])("esri.layers.ImageryLayer")],et);var tt=et;t["default"]=tt}}]);
//# sourceMappingURL=chunk-55f74dc4.9a5bd0b9.js.map